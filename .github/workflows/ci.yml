name: CI/CD Deploy grdmad

on:
  push:
    branches: [ main ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.meta.outputs.tag }}
    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Define Image Tag
        id: meta
        run: echo "tag=${GITHUB_SHA}" >> "$GITHUB_OUTPUT"

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/grd-mad:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/grd-mad:${{ steps.meta.outputs.tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy-to-server:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Check required secrets
        run: |
          test -n "${{ secrets.SERVER_HOST }}" || (echo "::error::Missing SERVER_HOST" && exit 1)
          test -n "${{ secrets.SERVER_USER }}" || (echo "::error::Missing SERVER_USER" && exit 1)
          test -n "${{ secrets.SERVER_SSH_KEY }}" || (echo "::error::Missing SERVER_SSH_KEY" && exit 1)

    # Se o secret jÃ¡ guarda a CHAVE PRIVADA em texto (-----BEGIN ...):
      - name: Write SSH key file
        shell: bash
        run: |
          umask 077
          cat > id_key <<'EOF'
          ${{ secrets.SERVER_SSH_KEY }}
          EOF
          chmod 600 id_key

    # Se preferir via base64 (opcional):
    # - name: Write SSH key file (base64)
    #   run: |
    #     umask 077
    #     echo "${{ secrets.SERVER_SSH_KEY_B64 }}" | base64 -d > id_key
    #     chmod 600 id_key

      - name: Deploy with SSH
        uses: appleboy/ssh-action@v1
        env:
          IMAGE_TAG: ${{ needs.build-and-push.outputs.image_tag }}
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }} # se o repo for privado
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key_path: ./id_key
          # Se a chave tiver passphrase, adicione este secret:
          # passphrase: ${{ secrets.SERVER_SSH_KEY_PASSPHRASE }}
          port: ${{ secrets.SERVER_PORT || '22' }}
          debug: true
          envs: IMAGE_TAG,DOCKERHUB_USERNAME,DOCKERHUB_TOKEN
          script: |
            set -Eeuo pipefail
            cd /var/www/grd-mad
  
            if [ -n "${DOCKERHUB_TOKEN:-}" ]; then
              echo "${DOCKERHUB_TOKEN}" | docker login -u "${DOCKERHUB_USERNAME}" --password-stdin || true
            fi
  
            # compose deve referenciar ${DOCKERHUB_USERNAME}/grd-mad:${IMAGE_TAG}
            grep -q 'grd-mad:${IMAGE_TAG}' docker-compose.yml
  
            docker pull "${DOCKERHUB_USERNAME}/grd-mad:${IMAGE_TAG}" || true
            docker stack deploy --with-registry-auth -c docker-compose.yml grd-mad
  
            docker image prune -f || true
            docker builder prune -f || true
